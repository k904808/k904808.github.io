<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Kay Log]]></title><description><![CDATA[:)]]></description><link>https://k904808.github.io/</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 11 Feb 2020 03:54:16 GMT</lastBuildDate><item><title><![CDATA[github에 소스코드 올리기]]></title><description><![CDATA[깃허브 관련 명령어 정리]]></description><link>https://k904808.github.io//posts/2020_02_06</link><guid isPermaLink="false">https://k904808.github.io//posts/2020_02_06</guid><pubDate>Thu, 06 Feb 2020 19:48:09 GMT</pubDate><content:encoded>&lt;h3&gt;git과 git hub&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;git : 버전관리 툴&lt;/li&gt;
  &lt;li&gt;git hub: 웹에 소스코드를 올려서 공유하는 곳&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
  &lt;li&gt;Repository 생성&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;p&gt; Github에 소스코드를 올리려면 먼저 github 홈페이지에서 repository를 생성해야 한다. 이때 생긴 repository를 remote repository라고 한다.&lt;/P&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;내 pc에서 업로드할 소스코드가 있는 디렉토리로 이동한다.&lt;br&gt;
        아래의 명령어로 local repository를 생성한다.&lt;/P&gt;
        &lt;p&gt;
          ```$git init```
          &lt;br&gt;
          이때 .git 디렉토리가 생성되는데 혹시 이후 과정에 문제가 생긴 경우, .git 디렉토리를 삭제한 후 다시 시도해보는 것이 해결방법이 될 수 있다.
        &lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;li&gt;상태확인&lt;/li&gt;
    &lt;p&gt;
      ```$git status```
      &lt;br&gt;
      명령어가 동작하지 않을 때 에러를 확인 할 수 있고,
      작업한 파일 이외에 다른 파일이 수정되지 않았는지 확인할 수 있다.
    &lt;/p&gt;  
  &lt;li&gt;add&lt;/li&gt;
    &lt;p&gt;
     ```$git add .```
     &lt;br&gt;
       하위 디렉토리에 있는 모든 변경 파일을 local repository에 추가하는 명령어.&lt;br&gt;
       . 대신에 파일명을 입력하면 특정 파일을 추가할 수 있다.
    &lt;/p&gt;
  &lt;li&gt;commit 메세지 작성&lt;/li&gt;
    &lt;p&gt;
      ```$git commit -m &quot;메세지내용&quot;```
      &lt;br&gt;
      -m은 한 줄로 간단하게 메세지를 작성할 때 사용하는 옵션으로, 긴 커밋메세지를 남길 경우에는```$git commit``` 명령어만 실행하면 된다.
    &lt;/p&gt;
  &lt;li&gt;remote repository 등록&lt;/li&gt;
    &lt;p&gt;```$git remote add origin &quot;remote repository 주소&quot;```&lt;/p&gt;
      &lt;p&gt;
        연결상태를 확인하고 싶을 때는 아래 명령어를 입력하면 된다.
      &lt;br&gt;
      ```$git remote -v```&lt;/p&gt;
      &lt;p&gt;
        혹시 연결이 잘못 되었거나, 다른 remote repository로 변경하고 싶은 경우,
      &lt;br&gt;
      ```git remote set-url &quot;변경할 이름&quot; &quot;새로운 url주소&quot;```&lt;/p&gt;
  &lt;li&gt;push&lt;/li&gt;
    &lt;p&gt;
      ```$git push origin master```
      &lt;br&gt;
      commit한 내용을 remote repository에 업로드 하는 것을 push한다고 한다.
      &lt;br&gt;
      master는 브랜치 이름이며, 다른 브랜치로 push하고 싶은 경우 master를 특정 브랜치 이름으로 바꿔서 실행하면 된다.
    &lt;/p&gt;
    &lt;p&gt;  
      새로운 브랜치 생성
      &lt;br&gt;
        ```$git branch &quot;생성할 브랜치 이름&quot;```
    &lt;/p&gt;
    &lt;p&gt;
      브랜치 이동
      &lt;br&gt;
      ```$git checkout &quot;브랜치 이름&quot;&quot;```
    &lt;/p&gt;
    &lt;p&gt;
      push의 반대 개념으로 ```$git clone &quot;repository 주소&quot; ```를 통해 원하는 파일을 다운로드 할 수도 있다.
    &lt;/p&gt;  
&lt;/ol&gt;</content:encoded></item></channel></rss>