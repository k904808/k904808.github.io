{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/hello_git_hub","result":{"data":{"markdownRemark":{"id":"a754a6b1-f7c7-5be8-a3ad-a9e3fc2cc941","html":"<h3>깃허브와 친해지려 노력중</h3>\n<p>깃허브 블로그를 만들었는데 아직 사용방법이 익숙치 않아 블로깅이 점점 더 게을러졌다.\n마크다운도 낯설기만 하다. ㅎㅎ 쓰다보면 언젠간 익숙해지겠지..?\n<br>\n테마에 포함되어있는 외쿡 아저씨 이미지도 내려드리고 이것저것 해보고 싶은데 아직은 엄두가 안난다. ㅎ\n다음주에 꼭 해봐야지. ;)\n요즘 한꺼번에 너무 많은 것을 배우고 정리해야하고 하고싶은 것 해야하는 것도 많고 시간이 부족하다.\n시간을 좀더 효율적으로 쓸 수 있는 방법을 고민해봐야겠다.\n<br>\n이제 tmi는 그만하고 깃허브에 대한 기본적인 개념, 블로그를 만들면서 썼던 명령어들을 정리해봐야지.\n</p>\n<h3>git과 git hub</h3>\n<ul>\n<li>git : 버전관리 툴</li>\n<li>git hub: 웹에 소스코드를 올려서 공유하는 곳</li>\n</ul>\n<ol>\n<li>Github에 소스코드를 올리려면 먼저 github 홈페이지에서 repository를 생성해야 한다.\n<br></li>\n<li>업로드할 디렉토리로 이동한다.\n<br></li>\n<li>local repository 생성.\n<br>\n<code class=\"language-text\">$git init</code>\n<br>\n이때 .git 디렉토리가 생성되는데 혹시 이후 과정에 문제가 생긴 경우 .git 디렉토리를 삭제한 후 다시 시도해보는 것이 해결방법이 될 수 있다.\n<br></li>\n<li>상태확인\n<br>\n<code class=\"language-text\">$git status</code>\n<br>\n명령어가 동작하지 않을 때 에러를 확인 할 수 있고,\n작업한 파일 이외에 다른 파일이 수정되지 않았는지 확인할 수 있다.\n<br></li>\n<li>add\n<br>\n<code class=\"language-text\">$git add .</code>\n<br>\n하위 디렉토리에 있는 모든 변경 파일을 local repository에 추가하는 명령어.\n. 대신에 파일명을 입력하면 특정 파일을 추가할 수 있다.\n<br></li>\n<li>commit 메세지 작성\n<br>\n<code class=\"language-text\">$git commit -m &quot;메세지내용&quot;</code>\n<br>\n-m은 한 줄로 간단하게 메세지를 작성할 때 사용하는 옵션으로, 긴 커밋메세지를 남길 경우에는\n<code class=\"language-text\">$git commit</code> 명령어만 실행하면 된다.\n<br>\n7.remote repository 등록\n<br>\n<code class=\"language-text\">$git remote add origin &quot;remote repository 주소&quot;</code>\n<br>\n연결상태를 확인하고 싶을 때는 아래 명령어를 입력하면 된다.\n<br>\n<code class=\"language-text\">$git remote -v</code>\n<br>\n혹시 연결이 잘못 되었거나, 다른 remote repository로 변경하고 싶은 경우에는 아래 명령어 입력.\n<br>\n<code class=\"language-text\">git remote set-url &quot;변경할 이름&quot; &quot;새로운 url주소&quot;</code>\n<br></li>\n<li>push\n<br>\n<code class=\"language-text\">$git push origin master</code>\n<br>\ncommit한 내용을 remote repository에 업로드 하는 것을 push한다고 한다.\nmaster는 브랜치 이름이며, 다른 브랜치로 push하고 싶은 경우 master를 특정 브랜치 이름으로 바꿔서 실행하면 된다.\n<br>\n새로운 브랜치 생성\n<br>\n<code class=\"language-text\">$git branch &quot;생성할 브랜치 이름</code>\n<br>\n브랜치 이동\n<br>\n<code class=\"language-text\">$git checkout &quot;브랜치 이름</code>\n<br>\npush의 반대 개념으로 <code class=\"language-text\">$git clone &quot;repository 주소&quot;</code>를 통해 원하는 파일을 다운로드 할 수도 있다.</li>\n</ol>","fields":{"slug":"/posts/hello_git_hub","tagSlugs":["/tag/git-hub/","/tag/gatsby/","/tag/web-development/"]},"frontmatter":{"date":"2020-02-06T19:48:09.169Z","description":"깃허브 관련 명령어 정리","tags":["git_hub","gatsby","Web Development"],"title":"깃허브와 친해지려 노력중","socialImage":"/media/42-line-bible.jpg"}}},"pageContext":{"slug":"/posts/hello_git_hub"}}}