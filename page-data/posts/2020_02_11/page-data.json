{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2020_02_11","result":{"data":{"markdownRemark":{"id":"53ba98d1-b2df-5c31-bfa6-e7d58b00a96e","html":"<h3 id=\"git과-github\" style=\"position:relative;\"><a href=\"#git%EA%B3%BC-github\" aria-label=\"git과 github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git과 Github</h3>\n<ol>\n<li>Repository 생성</li>\n</ol>\n<p>Github에 소스코드를 올리려면 먼저 github 홈페이지에서 repository를 생성해야 한다. 이때 생긴 repository를 remote repository라고 한다.</p>\n<p>내 pc에서 업로드할 소스코드가 있는 디렉토리로 이동한 뒤, 아래의 명령어로 local repository를 생성한다.</p>\n<p><code class=\"language-text\">$git init</code></p>\n<ol start=\"2\">\n<li>상태확인</li>\n</ol>\n<p><code class=\"language-text\">$git status</code>\n명령어가 동작하지 않을 때 에러를 확인 할 수 있고, 작업한 파일 이외에 다른 파일이 수정되지 않았는지 확인할 수 있다.</p>\n<ol start=\"3\">\n<li>add</li>\n</ol>\n<p><code class=\"language-text\">$git add .</code>\n하위 디렉토리에 있는 모든 변경 파일을 local repository에 추가하는 명령어.\n” . ” 대신에 파일명을 입력하면 특정 파일을 추가할 수 있다.</p>\n<ol start=\"4\">\n<li>commit 메세지 작성</li>\n</ol>\n<p><code class=\"language-text\">$git commit -m &quot;메세지내용&quot;</code>\n-m은 한 줄로 간단하게 메세지를 작성할 때 사용하는 옵션.\n긴 커밋메세지를 남길 경우에는 <code class=\"language-text\">$git commit</code> 명령어만 실행하면 된다.</p>\n<ol start=\"5\">\n<li>remote repository 등록\n<code class=\"language-text\">$git remote add origin &quot;remote repository 주소&quot;</code></li>\n</ol>\n<p>연결상태를 확인하고 싶을 때는 아래 명령어를 입력하면 된다.\n<code class=\"language-text\">$git remote -v</code></p>\n<p>혹시 연결이 잘못 되었거나, 다른 remote repository로 변경하고 싶은 경우,\n<code class=\"language-text\">git remote set-url &quot;변경할 이름&quot; &quot;새로운 url주소&quot;</code></p>\n<ol start=\"6\">\n<li>push</li>\n</ol>\n<p><code class=\"language-text\">$git push origin master</code>\ncommit한 내용을 remote repository에 업로드 하는 것을 push한다고 한다.\nmaster는 브랜치 이름이며, 다른 브랜치로 push하고 싶은 경우 master를 특정 브랜치 이름으로 바꿔서 실행하면 된다.</p>\n<p>새로운 브랜치 생성\n<code class=\"language-text\">$git branch &quot;생성할 브랜치 이름&quot;</code></p>\n<p>브랜치 이동\n<code class=\"language-text\">$git checkout &quot;브랜치 이름&quot;&quot;</code></p>\n<p>push의 반대 개념으로 <code class=\"language-text\">$git clone &quot;repository 주소&quot;</code>를 통해 원하는 파일을 다운로드 할 수도 있다.</p>","fields":{"slug":"/posts/2020_02_11","tagSlugs":["/tag/git-hub/","/tag/gatsby/","/tag/web-development/"]},"frontmatter":{"date":"2020-02-11T18:14:15.169Z","description":"깃허브 관련 명령어 정리","tags":["git_hub","gatsby","Web Development"],"title":"Github에 소스코드 올리기","socialImage":""}}},"pageContext":{"slug":"/posts/2020_02_11"}}}