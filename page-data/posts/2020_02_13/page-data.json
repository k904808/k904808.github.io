{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2020_02_13","result":{"data":{"markdownRemark":{"id":"5a295e66-8e36-5046-8ae7-6c9b82ed42fb","html":"<p>인증(Authentication)\n유저의 아이디와 패스워드를 확인하는 절차.</p>\n<p>-회원가입\n유저 아이디와 패스워드 생성\n유저 패스워드 암호화해서 DB 저장</p>\n<p>-로그인\n아이디와 패스워드를 입력\n유저가 입력한 패스워드와 DB에 저장된 암호화한 패스워드 비교\n일치하면 로그인 성공</p>\n<p>-access token\n로그인에 성공하면 access token을 클라이언트에게 전송\n유저는 로그인 성공 후부터 request에 access token을 첨부해서 서버에 전송\n<br>(매번 로그인 하지 않기 위함.)</p>\n<p>패스워드 암호화\nDB 해킹이나, 내부 인력이 유저의 패스워드이 있을 수 있으므로 패스워드는 반드시 암호화해서 저장해야함.</p>\n<p>단방향 암호화 : 복호화가 어려움\n양방향 암호화 : 대칭키 알고리즘 적용, 복호화 (다시 풀어서 보기)는 편함.  ex. 주민등록번호</p>\n<p>암호화는 오픈소스 라이브러리 bcrypt 사용</p>\n<p>&#x3C;암호화 한 뒤 DB 저장>\nstr - 인코딩- bytes - 해싱 - salting - (해싱 12번 반복) - 디코딩 -str 상태로 DB에 저장</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;&gt;&gt; password = &#39;1234&#39;\n&gt;&gt;&gt; a = password.encode()\n&gt;&gt;&gt; print(a)\nb&#39;1234&#39;\n&gt;&gt;&gt; b = bcrypt.hashpw(a, bcrypt.gensalt())\n&gt;&gt;&gt; print(b)\nb&#39;$2b$12$cX1nZKeM2prdi5mAs8pzzu6BJshHinfOypMmrbrWoY9N8RnmVTjmW&#39;\n&gt;&gt;&gt; c = b.decode()\n&gt;&gt;&gt; print(c)\n$2b$12$cX1nZKeM2prdi5mAs8pzzu6BJshHinfOypMmrbrWoY9N8RnmVTjmW</code></pre></div>\n<p>&#x3C;DB에 저장된 데이터와 유저가 입력한 패스워드 비교></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;&gt;&gt; d = &#39;1234&#39; #유저가 입력한 패스워드\n&gt;&gt;&gt; bcrypt.checkpw(d.encode(&#39;utf-8&#39;),c) #둘다 bytes 상태가 아니면 오류 발생하므로 주의!\nTraceback (most recent call last):\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\n  File &quot;/Users/kay/miniconda3/envs/auth/lib/python3.8/site-packages/bcrypt/__init__.py&quot;, line 100, in checkpw\n    raise TypeError(&quot;Unicode-objects must be encoded before checking&quot;)\nTypeError: Unicode-objects must be encoded before checking\n&gt;&gt;&gt; bcrypt.checkpw(d.encode(&#39;utf-8&#39;),c.encode())\nTrue #DB에 저장된 패스워드와 유저가 입력한 패스워드가 같으면 True 반환\n&gt;&gt;&gt; print(c.encode())\nb&#39;$2b$12$cX1nZKeM2prdi5mAs8pzzu6BJshHinfOypMmrbrWoY9N8RnmVTjmW&#39;\n&gt;&gt;&gt; print(d.encode())\nb&#39;1234&#39;\n&gt;&gt;&gt; c</code></pre></div>","fields":{"slug":"/posts/2020_02_13","tagSlugs":["/tag/authorization/","/tag/authentication/","/tag/web-development/"]},"frontmatter":{"date":"2020-02-13T23:51:33.169Z","description":"인증(Authentication) & 인가(Authorization)-1","tags":["Authorization","Authentication","Web Development"],"title":"인증(Authentication) & 인가(Authorization)-1","socialImage":""}}},"pageContext":{"slug":"/posts/2020_02_13"}}}