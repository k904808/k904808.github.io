{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2020_02_16","result":{"data":{"markdownRemark":{"id":"d0ffe1ac-ebc8-5a92-bbf6-e94d0837fb02","html":"<h3 id=\"restful-http-api-구조-및-핵심-개념\" style=\"position:relative;\"><a href=\"#restful-http-api-%EA%B5%AC%EC%A1%B0-%EB%B0%8F-%ED%95%B5%EC%8B%AC-%EA%B0%9C%EB%85%90\" aria-label=\"restful http api 구조 및 핵심 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful HTTP API 구조 및 핵심 개념</h3>\n<ul>\n<li>URI(Uniform Resource Identifier)\n해당 사이트의 특정 리소스의 위치를 나타내는 <strong>유일한 주소</strong></li>\n<li>HTTP Method\nHTTP request가 의도하는 action을 정의한 것 (POST, GET)</li>\n<li>Payload\nHTTP request에서 보내는 데이터(body)</li>\n</ul>\n<h3 id=\"representational-state-transfer\" style=\"position:relative;\"><a href=\"#representational-state-transfer\" aria-label=\"representational state transfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REpresentational State Transfer</h3>\n<ul>\n<li>웹상에서 사용되는 여러 리소스를 HTTP URI로 표현하고 그 리소스에 대한 action을 HTTP Method로 정의하는 방식.</li>\n<li>“리소스(HTTP URI로 정의된)를 어떻게 한다(HTTP Method + Payload)“를 구조적으로 깔끔하게 표현하는 것.</li>\n<li>Method는 주로 GET과 POST를 사용</li>\n</ul>\n<h3 id=\"restful-api의-장점\" style=\"position:relative;\"><a href=\"#restful-api%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"restful api의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful API의 장점</h3>\n<ul>\n<li>그 자체만으로도 API의 목적이 쉽게 이해 됨. (self-descriptiveness)</li>\n</ul>\n<h3 id=\"restful-api를-개발할-때-유의할-점\" style=\"position:relative;\"><a href=\"#restful-api%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%A0-%EB%95%8C-%EC%9C%A0%EC%9D%98%ED%95%A0-%EC%A0%90\" aria-label=\"restful api를 개발할 때 유의할 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful API를 개발할 때 유의할 점</h3>\n<ul>\n<li>/(슬래시)는 계층관계를 나타낼 때 사용</li>\n<li>URI에 _(underscore)는 주로 포함하지 않고 영어 대문자보다 소문자를 사용.</li>\n</ul>\n<p>참고 및 출처 : 위코드 은우님 세션</p>","fields":{"slug":"/posts/2020_02_16","tagSlugs":["/tag/res-tful-api/","/tag/web-development/"]},"frontmatter":{"date":"2020-02-16T20:49:10.169Z","description":"RESTful API","tags":["RESTfulAPI","Web Development"],"title":"RESTful API","socialImage":""}}},"pageContext":{"slug":"/posts/2020_02_16"}}}