{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2020_02_12","result":{"data":{"markdownRemark":{"id":"4724804c-4678-5e1c-a6d3-c0d5dc090571","html":"<h3 id=\"git과-githhub\" style=\"position:relative;\"><a href=\"#git%EA%B3%BC-githhub\" aria-label=\"git과 githhub permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git과 Githhub</h3>\n<h4 id=\"git--version-control-system\" style=\"position:relative;\"><a href=\"#git--version-control-system\" aria-label=\"git  version control system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git : Version Control System</h4>\n<ul>\n<li>코드의 변경사항 기록, 관리</li>\n<li>필요시 이전 상태로 rollback 할 수 있음</li>\n<li>팀단위 개발 시 체계적, 효과적 협업</li>\n</ul>\n<h4 id=\"distributed-version-control-system--분산-버전-관리-시스템\" style=\"position:relative;\"><a href=\"#distributed-version-control-system--%EB%B6%84%EC%82%B0-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"distributed version control system  분산 버전 관리 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Distributed Version Control System : 분산 버전 관리 시스템</h4>\n<ul>\n<li>중앙서버 뿐만 아니라 각 개발자의 컴퓨터에도 최신 버전의 코드, 수정사항 내역, meta 정보를 전부 가지고있는 방식.</li>\n</ul>\n<h4 id=\"github--git의-중앙서버\" style=\"position:relative;\"><a href=\"#github--git%EC%9D%98-%EC%A4%91%EC%95%99%EC%84%9C%EB%B2%84\" aria-label=\"github  git의 중앙서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github : Git의 중앙서버</h4>\n<p>❗️모든 작업은 local(내 pc)에서 일어남.\n<br>\n❗️문제가 생겨도 내 pc에서 생김. conflict도 내 pc에서만 생김. (다른 개발자들에게 영향 X)</p>\n<ul>\n<li>clone : 처음 작업을 시작할 때 다운로드</li>\n<li>pull : 최신 코드를 다운로드</li>\n<li>push : 내 코드를 업로드</li>\n</ul>\n<h4 id=\"local-repository\" style=\"position:relative;\"><a href=\"#local-repository\" aria-label=\"local repository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local repository</h4>\n<p><img src=\"https://images.velog.io/images/k904808/post/de304989-138e-44d1-b816-e0e38762a0d6/image.png\">\n이미지 출처 : <a href=\"https://neurathsboat.blog/post/git-intro/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://neurathsboat.blog/post/git-intro/</a></p>\n<p>⚠️ commit, push 하기 전에 파일을 제대로 올렸는지, 코드가 제대로 돌아가는지 반드시 확인 필요.</p>\n<blockquote>\n<p><code class=\"language-text\">$git diff</code> / <code class=\"language-text\">$git status</code> 로 확인하고 커밋 해야함.</p>\n</blockquote>\n<h4 id=\"git-brach의-종류\" style=\"position:relative;\"><a href=\"#git-brach%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"git brach의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git Brach의 종류</h4>\n<blockquote>\n<p>Gitflow에서는 항상 유지되는 메인 브랜치(master, develop)과 일정기간 동안만 유지되는 보조 브랜치(feature, release, hotfix) 총 5가지가 있다.</p>\n</blockquote>\n<p><img src=\"https://images.velog.io/images/k904808/post/436df1ec-5dd5-4e88-b77d-5917fc18d898/image.png\"></p>\n<ul>\n<li>master : 배포(release)이력을 관리하기 위해 사용. 배포가능한 상태만 관리.</li>\n<li>develop : 기능 개발을 위한 브랜치들을 병합하기 위해 사용. 모든기능이 추가되고 버그가 수정되어 배포가능한 안정적 상태라면 develop 브랜치를 master 브랜치에 병합. 평소에는 이 브랜치를 기반으로 개발을 진행한다.</li>\n<li>feature : 새로운 기능 개발, 버그 수정이 필요할 때마다 ‘develop’ 브랜치로부터 분기. feature 브랜치의 작업은 기본적으로 공유 필요 없기 때문에 로컬 저장소에서 관리. 개발이 완료되면 ‘develop’ 브랜치로 병합하여 다른 사람들과 공유.</li>\n<li>release : 이번 출시 버전을 준비하는 배포 전용 브랜치. 배포 준비가 완료되면 master 브랜치에 병합. 배포 완료 후 develop 브랜치에도 병합. (release-RB_* 또는 release-* 또는 release/* 처럼 이름 짓는 것이 일반적인 관례)</li>\n<li>hotfix : 배포한 버전에 긴급하게 수정을 해야할 필요가 있을 경우, master 브랜치에서 분기. 바로 배포가 가능한 mater 브랜치에서 직접 브랜치를 만들어 필요한 부분만 수정한 후 다시 master 브랜치에 병합하여 배포.</li>\n</ul>\n<p>이미지 출처 및 참고 : <a href=\"https://gmlwjd9405.github.io/2018/05/11/types-of-git-branch.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gmlwjd9405.github.io/2018/05/11/types-of-git-branch.html</a></p>","fields":{"slug":"/posts/2020_02_12","tagSlugs":["/tag/git/","/tag/github/","/tag/web-development/"]},"frontmatter":{"date":"2020-02-12T19:21:34.169Z","description":"깃과 깃허브, 브랜치 관련 개념 정리","tags":["git","github","Web Development"],"title":"Git과 Github","socialImage":""}}},"pageContext":{"slug":"/posts/2020_02_12"}}}